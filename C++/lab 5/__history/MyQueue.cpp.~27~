//---------------------------------------------------------------------------

#pragma hdrstop

#include "MyQueue.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)


void ind :: Show(ind** head, TListBox *ListBox1)
{
	ListBox1 -> Clear();
	ind* current = *head;
	while (current)
	{
		ListBox1 -> Items -> Add(current -> x);
		current = current -> next;
	}
}


void ind:: MakeQ(ind** head, TListBox *ListBox1, int d)
{
	ind *add = new ind;
	add -> x = d;
	add -> next = NULL;
	add -> prev = NULL;
	if (!*head)
		*head = add;
	else
	{
		ind* curr = *head;
		while (curr -> next)
			curr = curr -> next;
		curr -> next = add;
		add -> prev = curr;
	}
	(*head) -> Show(head,ListBox1);
}



ind* ind:: Remove(ind* head, int n)
{
	ind *ptr;
	ind *current = head;
	for (int i = 1; i < n && current != NULL; i++)
		current = current -> next;

	if (current != NULL)
	{

		if (current->prev == NULL)
		{
			head = head -> next;
			delete(current);
			if (head)
				head -> prev = NULL;
			current = head;
		}

		else
		{
			if (current -> next == NULL)
			{
				current -> prev -> next = NULL;
				delete(current);
				current = head;
			}

			else
			{
				ptr = current -> next;
				current -> prev -> next = current -> next;
				current -> next -> prev = current -> prev;
				delete(current);
				current = ptr;
			}
		}
	}
	return head;
}


ind* ind::Create(TEdit* Edit3, ind *head, TListBox *ListBox1)
{
	srand(time(0));
	int n = StrToInt(Edit3 -> Text);
	if(n > 0)
	{
		for(int i = 0; i < n; i++)
		{
			head -> MakeQ(&head, ListBox1, -100+rand()%200);
		}
	}
	return head;
}


ind* ind:: Delete(ind* head,TListBox *ListBox1)
{
	while(head)
	{
		ind* old = head;
		head = head -> next;
		delete old;
	}
	head -> Show(&head, ListBox1);
	return head;
}


ind* ind:: Clear(ind *head,TListBox *ListBox1)
{
	ind* first = new ind;
	ind* second = new ind;

	first = head;
	second = head -> next;

	int number = 0, flag = 0;





	head -> Show(&head, ListBox1);
	return head;
}
